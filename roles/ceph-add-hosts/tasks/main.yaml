---
- name: Fetch admin ssh key
  run_once: true
  delegate_to: "{{ groups.ceph_admins[0] }}"
  fetch:
    src: '/etc/ceph/ceph.pub'
    dest: '/tmp/{{ groups.ceph_admins[0] }}_ceph_public-key.pub'
    flat: true

- name: Add ssh keys to the other hosts
  ansible.posix.authorized_key:
    user: "root"
    state: present
    key: "{{ item }}"
  with_file: '/tmp/{{ groups.ceph_admins[0] }}_ceph_public-key.pub'

- name: Confirm that chronyd is running
  systemd:
    name: chronyd
    state: "started"
    enabled: true

- name: Tell ceph that new nodes are part of the cluster
  run_once: true
  delegate_to: "{{ groups.ceph_admins[0] }}"
  shell: "{{ cephadm_path }} shell -- ceph orch host add {{ item }} {{ hostvars[item]['ansible_default_ipv4']['address'] }}"
  loop: "{{ play_hosts }}" 

- name: Dict to list roles with node
  run_once: true
  set_fact:
    roles_with_nodes_list: "{{ roles_with_nodes_list + [roles_with_nodes_dict[item] | zip_longest([item], fillvalue=item)]}}"
  loop: "{{ roles_with_nodes_dict.keys() }}"

- name: Assemble nodes with roles
  run_once: true
  set_fact:
    roles_with_nodes: "{{ roles_with_nodes + item }}"
  loop: "{{ roles_with_nodes_list }}"

- name: Add the different roles to the nodes
  run_once: true
  delegate_to: "{{ groups.ceph_admins[0] }}"
  shell: "cephadm shell -- ceph orch host label add {{ item[0] }} {{ item[1]}}"
  loop: "{{ roles_with_nodes }}"

#- name: Assign daemons according to the label
#  run_once: true
#  delegate_to: "{{ groups.ceph_admins[0] }}" 
#  shell: "cephadm shell -- ceph orch apply {{ item }} label:{{ item }}"
#  loop: "{{ roles_with_nodes_dict.keys }}"
 
#- name: Assign daemons according to the label with secific names and their IDs
#  run_once: true
#  delegate_to: "{{ groups.ceph_admins[0] }}" 
#  shell: "cephadm shell -- ceph orch apply {{ item.0 }} label:{{ item.0 }}"
#  loop: "{{ roles_with_nodes_and_ids_dict.keys }}"

- name: Download cephadm
  get_url:
    url: "{{ cephadm_url }}"
    dest: '{{ cephadm_path }}'

- name: Make cephadm executable
  file:
    path: "{{ cephadm_path }}"
    mode: '+x'

- name: Install cephadm
  shell: "{{ cephadm_path }} install"

- name: Check on disks are registered
  include_tasks: "check-ceph-disks.yaml"
